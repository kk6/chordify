services:
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - DJANGO_SETTINGS_MODULE=backend.settings # Adjust if your settings file path is different
      - SECRET_KEY=${DJANGO_SECRET_KEY} # Load from .env
    depends_on:
      - db
    env_file:
      - .env # Load environment variables from .env file
    develop:
      # Create a `watch` configuration to update the app
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: ./backend
          target: /app
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          ignore:
            - .venv/

        # Rebuild the image if dependencies change by checking uv.lock
        - action: rebuild
          path: ./backend/uv.lock

  db:
    image: postgres:15 # Use a specific version of PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432" # Expose PostgreSQL port if needed for direct access

  frontend:
    build:
      context: ./frontend
      # Optional: Specify target stage if your Dockerfile has multiple stages
      # target: development # Or production
    ports:
      # The frontend container itself runs on port 80 (defined in frontend/Dockerfile)
      # We don't expose it directly here as Nginx reverse proxy will handle access.
      # - "3000:80" # Example if you needed direct access during development
      - "80" # Expose port 80 within the Docker network for Nginx proxy
    develop:
      watch:
        # Sync source code changes
        - action: sync
          path: ./frontend/src # Adjust path to your source code directory
          target: /app/src
          ignore:
            - node_modules/
        # Rebuild if dependencies change
        - action: rebuild
          path: ./frontend/package.json
        - action: rebuild
          path: ./frontend/package-lock.json # Or yarn.lock, pnpm-lock.yaml
        # Sync other relevant config files if needed
        # - action: sync+restart
        #   path: ./frontend/vite.config.js
        #   target: /app/vite.config.js

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80" # Map host port 80 to container port 80
    depends_on:
      - backend
      - frontend
    develop:
      watch:
        # Restart Nginx if its configuration changes
        - action: sync+restart
          path: ./nginx/nginx.conf
          target: /etc/nginx/conf.d/default.conf

volumes:
  postgres_data:
